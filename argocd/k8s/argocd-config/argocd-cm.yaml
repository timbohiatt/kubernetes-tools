apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # Enables anonymous user access. The anonymous users get default role permissions specified argocd-rbac-cm.yaml.
  users.anonymous.enabled: "false"
  # Specifies token expiration duration
  users.session.duration: "24h"

  # Specifies regex expression for password
  passwordPattern: "^.{8,32}$"

  # A dex connector configuration (optional). See SSO configuration documentation:
  # https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/sso
  # https://dexidp.io/docs/connectors/
  # dex.config: |
  #   connectors:
  #     # GitHub example
  #     - type: github
  #       id: github
  #       name: GitHub
  #       config:
  #         clientID: aabbccddeeff00112233
  #         clientSecret: $dex.github.clientSecret
  #         orgs:
  #         - name: your-github-org
  #           teams:
  #           - red-team

  # # OIDC configuration as an alternative to dex (optional).
  # oidc.config: |
  #   name: Okta
  #   issuer: https://dev-123456.oktapreview.com
  #   clientID: aaaabbbbccccddddeee
  #   clientSecret: $oidc.okta.clientSecret
  #   # Optional set of OIDC scopes to request. If omitted, defaults to: ["openid", "profile", "email", "groups"]
  #   requestedScopes: ["openid", "profile", "email"]
  #   # Optional set of OIDC claims to request on the ID token.
  #   requestedIDTokenClaims: {"groups": {"essential": true}}


  # A set of settings that allow enabling or disabling the config management tool.
  # If unset, each defaults to "true".
  kustomize.enabled: true
  jsonnet.enabled: true
  helm.enabled: true

  # disables admin user. Admin is enabled by default
  admin.enabled: "true"
  # add an additional local user with apiKey and login capabilities
  #   apiKey - allows generating API keys
  #   login - allows to login using UI
  accounts.viewer:  login
  accounts.viewer.enabled: "true"

  # Application reconciliation timeout is the max amount of time required to discover if a new manifests version got
  # published to the repository. Reconciliation by timeout is disabled if timeout is set to 0. Three minutes by default.
  # > Note: argocd-repo-server deployment must be manually restarted after changing the setting.
  timeout.reconciliation: 180s

  # cluster.inClusterEnabled indicates whether to allow in-cluster server address. This is enabled by default.
  cluster.inClusterEnabled: "true"

  # Application pod logs RBAC enforcement enables control over who can and who can't view application pod logs.
  # When you enable the switch, pod logs will be visible only to admin role by default. Other roles/users will not be able to view them via cli and UI.
  # When you enable the switch, viewing pod logs for other roles/users will require explicit RBAC allow policies (allow get on logs subresource).
  # When you disable the switch (either add it to the configmap with a "false" value or do not add it to the configmap), no actual RBAC enforcement will take place.
  server.rbac.log.enforce.enable: "false"

  # exec.enabled indicates whether the UI exec feature is enabled. It is disabled by default.
  exec.enabled: "false"

  # exec.shells restricts which shells are allowed for `exec`, and in which order they are attempted
  exec.shells: "bash,sh,powershell,cmd"

  # oidc.tls.insecure.skip.verify determines whether certificate verification is skipped when verifying tokens with the
  # configured OIDC provider (either external or the bundled Dex instance). Setting this to "true" will cause JWT
  # token verification to pass despite the OIDC provider having an invalid certificate. Only set to "true" if you
  # understand the risks.
  oidc.tls.insecure.skip.verify: "false"
